#!/bin/bash
dt="_$(date +%d.%m.%Y_%H:%M:%S).txt"
touch ./test/output/"$dt"
OUTPUT=$(./bin/mips_simulator "test_binaries/r0_test.bin")
if test $? = 1
then
    echo "r0_test.bin, N/A, PASS, Drakvor (Garham Amos Kwon), r0 remains unmodified as it should, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 6
then
    echo "r0_test.bin, N/A, FAIL, Drakvor (Garham Amos Kwon), r0 was modified to 5, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "r0_test.bin, N/A, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/invalid.bin")
if test $? = 244
then
    echo "invalid.bin, N/A, PASS, Drakvor (Garham Amos Kwon), Invalid Instruction Exception, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "invalid.bin, N/A, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/mult_bt.bin")
if test $? = 6
then
    echo "mult_bt.bin, MULT, PASS, Drakvor (Garham Amos Kwon), multiplication successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "mult_bt.bin, MULT, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/multu_bt.bin")
if test $? = 6
then
    echo "multu_bt.bin, MULTU, PASS, Drakvor (Garham Amos Kwon), multiplication successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "multu_bt.bin, MULTU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/mult_lg.bin")
if test $? = 255
then
    echo "mult_lg.bin, MULT, PASS, Drakvor (Garham Amos Kwon), multiplication successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "mult_lg.bin, MULT, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/mult_ng.bin")
if test $? = 16
then
    echo "mult_ng.bin, MULT, PASS, Drakvor (Garham Amos Kwon), multiplication successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "mult_ng.bin, MULT, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/div_ng_1.bin")
if test $? = 254
then
    echo "div_ng_1.bin, DIV, PASS, Drakvor (Garham Amos Kwon), division successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "div_ng_1.bin, DIV, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/div_ng_2.bin")
if test $? = 254
then
    echo "div_ng_2.bin, DIV, PASS, Drakvor (Garham Amos Kwon), division successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "div_ng_2.bin, DIV, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/div_rm.bin")
if test $? = 2
then
    echo "div_rm.bin, DIV, PASS, Drakvor (Garham Amos Kwon), division successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "div_rm.bin, DIV, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sltu_bt.bin")
if test $? = 1
then
    echo "sltu_bt.bin, SLTU, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sltu_bt.bin, SLTU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sll_ov.bin")
if test $? = 0
then
    echo "sll_ov.bin, SLL, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sll_ov.bin, SLL, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/addiu_ng.bin")
if test $? = 0
then
    echo "addiu_ng.bin, ADDIU, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "addiu_ng.bin, ADDIU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/div_zr.bin")
if test $? = 0
then
    echo "div_zr.bin, ADDIU, PASS, Drakvor (Garham Amos Kwon), division successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "div_zr.bin, ADDIU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/srav_lg.bin")
if test $? = 255
then
    echo "srav_lg.bin, ADDIU, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "srav_lg.bin, ADDIU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/add_nj.bin")
if test $? = 246
then
    echo "add_nj.bin, ADDIU, PASS, Drakvor (Garham Amos Kwon), Integer Overflow Exception, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "add_nj.bin, ADDIU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi


OUTPUT=$(./bin/mips_simulator "test_binaries/add_bt.bin")
if test $? = 3
then
    echo "add_bt.bin, ADD, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "add_bt.bin, ADD, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/add_ov.bin")
if test $? = 246
then
    echo "add_ov.bin, ADD, PASS, Drakvor (Garham Amos Kwon), Integer Overflow Exception, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "add_ov.bin, ADD, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/addi_bt.bin")
if test $? = 2
then
    echo "addi_bt.bin, ADDI, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "addi_bt.bin, ADDI, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/addi_ov.bin")
if test $? = 246
then
    echo "addi_ov.bin, ADDI, PASS, Drakvor (Garham Amos Kwon), Integer Overflow Exception, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "addi_ov.bin, ADDI, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/addiu_bt.bin")
if test $? = 10
then
    echo "addiu_bt.bin, ADDIU, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "addiu_bt.bin, ADDIU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/addu_bt.bin")
if test $? = 5
then
    echo "addu_bt.bin, ADDU, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "addu_bt.bin, ADDU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/and_bt.bin")
if test $? = 170
then
    echo "and_bt.bin, AND, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "and_bt.bin, AND, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/andi_bt.bin")
if test $? = 170
then
    echo "andi_bt.bin, ANDI, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "andi_bt.bin, ANDI, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/or_bt.bin")
if test $? = 170
then
    echo "or_bt.bin, OR, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "or_bt.bin, OR, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/ori_bt.bin")
if test $? = 170
then
    echo "ori_bt.bin, ORI, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "ori_bt.bin, ORI, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/xor_bt.bin")
if test $? = 85
then
    echo "xor_bt.bin, XOR, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "xor_bt.bin, XOR, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/xori_bt.bin")
if test $? = 170
then
    echo "xori_bt.bin, XORI, PASS, Drakvor (Garham Amos Kwon), addition successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "xori_bt.bin, XORI, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sub_bt.bin")
if test $? = 3
then
    echo "sub_bt.bin, SUB, PASS, Drakvor (Garham Amos Kwon), subtraction successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sub_bt.bin, SUB, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sub_ov.bin")
if test $? = 246
then
    echo "sub_ov.bin, SUB, PASS, Drakvor (Garham Amos Kwon), Integer Overflow Exception, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sub_ov.bin, SUB, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/subu_bt.bin")
if test $? = 3
then
    echo "subu_bt.bin, SUBU, PASS, Drakvor (Garham Amos Kwon), subtraction successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "subu_bt.bin, SUBU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sll_bt.bin")
if test $? = 2
then
    echo "sll_bt.bin, SLL, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sll_bt.bin, SLL, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sllv_bt.bin")
if test $? = 8
then
    echo "sllv_bt.bin, SLLV, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sllv_bt.bin, SLLV, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sra_bt.bin")
if test $? = 255
then
    echo "sra_bt.bin, SRA, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sra_bt.bin, SRA, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/srav_bt.bin")
if test $? = 255
then
    echo "srav_bt.bin, SRAV, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "srav_bt.bin, SRAV, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/srl_bt.bin")
if test $? = 2
then
    echo "srl_bt.bin, SRL, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "srl_bt.bin, SRL, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/srlv_bt.bin")
if test $? = 1
then
    echo "srlv_bt.bin, SRLV, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "srlv_bt.bin, SRLV, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/slt_bt.bin")
if test $? = 1
then
    echo "slt_bt.bin, SLT, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "slt_bt.bin, SLT, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/slti_bt.bin")
if test $? = 1
then
    echo "slti_bt.bin, SLTI, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "slti_bt.bin, SLTI, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/sltiu_bt.bin")
if test $? = 1
then
    echo "sltiu_bt.bin, SLTIU, PASS, Drakvor (Garham Amos Kwon), operation successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sltiu_bt.bin, SLTIU, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/mthi_mfhi_bt.bin")
if test $? = 2
then
    echo "mthi_mfhi_bt.bin, MTHI/MFHI, PASS, Drakvor (Garham Amos Kwon), operations successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "mthi_mfhi_bt.bin, MTHI/MFHI, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi

OUTPUT=$(./bin/mips_simulator "test_binaries/mtlo_mflo_bt.bin")
if test $? = 7
then
    echo "mtlo_mflo_bt.bin, MTLO/MFLO, PASS, Drakvor (Garham Amos Kwon), operations successfully performed, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "mtlo_mflo_bt.bin, MTLO/MFLO, FAIL, Drakvor (Garham Amos Kwon), operation failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi


OUTPUT=$(./bin/mips_simulator "test_binaries/harsh_r0_test.bin")
if test $? = 1
then
    echo "harsh_r0_test.bin, N/A, PASS, Silvertrousers (Cyrus Goodarzi), r0 remains unmodified as it should, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "harsh_r0_test.bin, N/A, FAIL, Silvertrousers (Cyrus Goodarzi), branch did not occur so delay slot instruction was able to modify r0 at least temporarily, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "harsh_r0_test.bin, N/A, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bgez_bt.bin")
if test $? = 1
then
    echo "bgez_bt.bin, BGEZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "bgez_bt.bin, BGEZ, FAIL, Silvertrousers (Cyrus Goodarzi), Branched relative to branch instr not the delay slot instr, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "bgez_bt.bin, BGEZ, FAIL, Silvertrousers (Cyrus Goodarzi), No branch occured, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bgez_bt.bin, BGEZ, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bgez_illegal_back.bin")
if test $? = 245
then
    echo "bgez_illegal_back, BGEZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, "  | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bgez_illegal_back, BGEZ, FAIL, Silvertrousers (Cyrus Goodarzi), didnt return the correct error, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bgezal_bt.bin")
if test $? = 2
then
    echo "bgezal_bt.bin, BGEZAL, PASS, Silvertrousers (Cyrus Goodarzi), branch returned to correct place " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 3
then
    echo "bgezal_bt.bin, BGEZAL, FAIL, Silvertrousers (Cyrus Goodarzi), Returned to delay slot instr instead of one in front or no branch occured, see bgez_bt, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bgezal_bt.bin, BGEZAL, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/beq_bt.bin")
if test $? = 1
then
    echo "beq_bt.bin, BEQ, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "beq_bt.bin, BEQ, FAIL, Silvertrousers (Cyrus Goodarzi), Branched relative to branch instr not the delay slot instr, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "beq_bt.bin, BEQ, FAIL, Silvertrousers (Cyrus Goodarzi), No branch occured, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "beq_bt.bin, BEQ, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/beq_illegal_back.bin")
if test $? = 245
then
    echo "beq_illegal_back, BEQ, PASS, Silvertrousers (Cyrus Goodarzi), ----, "  | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "beq_illegal_back, BEQ, FAIL, Silvertrousers (Cyrus Goodarzi), didnt return the correct error, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bgtz_bt.bin")
if test $? = 1
then
    echo "bgtz_bt.bin, BGTZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "bgtz_bt.bin, BGTZ, FAIL, Silvertrousers (Cyrus Goodarzi), Branched relative to branch instr not the delay slot instr, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "bgtz_bt.bin, BGTZ, FAIL, Silvertrousers (Cyrus Goodarzi), No branch occured, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bgtz_bt.bin, BGTZ, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bgtz_illegal_back.bin")
if test $? = 245
then
    echo "bgtz_illegal_back, BGTZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, "  | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bgtz_illegal_back, BGTZ, FAIL, Silvertrousers (Cyrus Goodarzi), didnt return the correct error, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/blez_bt.bin")
if test $? = 1
then
    echo "blez_bt.bin, BLEZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "blez_bt.bin, BLEZ, FAIL, Silvertrousers (Cyrus Goodarzi), Branched relative to branch instr not the delay slot instr, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "blez_bt.bin, BLEZ, FAIL, Silvertrousers (Cyrus Goodarzi), No branch occured, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "blez_bt.bin, BLEZ, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/blez_illegal_back.bin")
if test $? = 245
then
    echo "blez_illegal_back, BLEZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, "  | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "blez_illegal_back, BLEZ, FAIL, Silvertrousers (Cyrus Goodarzi), didnt return the correct error, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bltz_bt.bin")
if test $? = 1
then
    echo "bltz_bt.bin, BLTZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "bltz_bt.bin, BLTZ, FAIL, Silvertrousers (Cyrus Goodarzi), Branched relative to branch instr not the delay slot instr, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "bltz_bt.bin, BLTZ, FAIL, Silvertrousers (Cyrus Goodarzi), No branch occured, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bltz_bt.bin, BLTZ, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bltz_illegal_back.bin")
if test $? = 245
then
    echo "bltz_illegal_back, BLTZ, PASS, Silvertrousers (Cyrus Goodarzi), ----, "  | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bltz_illegal_back, BLTZ, FAIL, Silvertrousers (Cyrus Goodarzi), didnt return the correct error, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bltzal_bt.bin")
if test $? = 2
then
    echo "bltzal_bt.bin, BLTZAL, PASS, Silvertrousers (Cyrus Goodarzi), branch returned to correct place " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 3
then
    echo "bltzal_bt.bin, BLTZAL, FAIL, Silvertrousers (Cyrus Goodarzi), Returned to delay slot instr instead of one in front or no branch occured, see bgez_bt, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bltzal_bt.bin, BLTZAL, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/bne_bt.bin")
if test $? = 1
then
    echo "bne_bt.bin, BNE, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "bne_bt.bin, BNE, FAIL, Silvertrousers (Cyrus Goodarzi), Branched relative to branch instr not the delay slot instr, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "bne_bt.bin, BNE, FAIL, Silvertrousers (Cyrus Goodarzi), No branch occured, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "bne_bt.bin, BNE, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/j_ds.bin")
if test $? = 1
then
    echo "j_ds.bin, J, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 0
then
    echo "j_ds.bin, J, FAIL, Silvertrousers (Cyrus Goodarzi), Delay slot instr not executing, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "j_ds.bin, J, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/jal_bt.bin")
if test $? = 3
then
    echo "jal_bt.bin, JAL, PASS, Silvertrousers (Cyrus Goodarzi), link returns to correct place, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 4
then
    echo "jal_bt.bin, JAL, FAIL, Silvertrousers (Cyrus Goodarzi), link returns to delay slot instr (not correct return address), " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "jal_bt.bin, JAL, FAIL, Silvertrousers (Cyrus Goodarzi), link returns to instr 2 after the delays slot instr (too far), " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "jal_bt.bin, JAL, FAIL, Silvertrousers (Cyrus Goodarzi), not sure hats wrong here, " | paste -sd ' ' >> ./test/output/"$dt"

fi
OUTPUT=$(./bin/mips_simulator "test_binaries/jalr_bt.bin")
if test $? = 3
then
    echo "jalr_bt.bin, JALR, PASS, Silvertrousers (Cyrus Goodarzi), link returns to correct place, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 4
then
    echo ass
    echo "jalr_bt.bin, JALR, FAIL, Silvertrousers (Cyrus Goodarzi), link returns to delay slot instr (not correct return address), " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 2
then
    echo "jalr_bt.bin, JALR, FAIL, Silvertrousers (Cyrus Goodarzi), link returns to instr 2 after the delays slot instr (too far), " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "jalr_bt.bin, JALR, FAIL, Silvertrousers (Cyrus Goodarzi), not sure hats wrong here, " | paste -sd ' ' >> ./test/output/"$dt"

fi
OUTPUT=$(./bin/mips_simulator "test_binaries/jr_bt.bin")
if test $? = 0
then
    echo "jr_bt.bin, JR, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "jr_bt.bin, JR, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/j_bt.bin")
if test $? = 0
then
    echo "j_bt.bin, J, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 1
then
    echo "j_bt.bin, J, FAIL, Silvertrousers (Cyrus Goodarzi), Jump went one instruction too far, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "j_bt.bin, J, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lbu_bt.bin")
if test $? = 16
then
    echo "lbu_bt.bin, LBU, PASS, Silvertrousers (Cyrus Goodarzi), loads correct byte without sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 240
then
    echo "lbu_bt.bin, LBU, FAIL, Silvertrousers (Cyrus Goodarzi), loads correct byte but has sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lbu_bt.bin, LBU, FAIL, Silvertrousers (Cyrus Goodarzi), loads wrong byte, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lbu_ov.bin")
if test $? = 245
then
    echo "lbu_ov.bin, LBU, PASS, Silvertrousers (Cyrus Goodarzi), catces out of range memory loading, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lbu_ov.bin, LBU, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch trying to load out of range mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lb_bt.bin")
if test $? = 240
then
    echo "lb_bt.bin, LB, PASS, Silvertrousers (Cyrus Goodarzi), loads correct byte with sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 16
then
    echo "lb_bt.bin, LB, FAIL, Silvertrousers (Cyrus Goodarzi), loads correct byte but has no sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lb_bt.bin, LB, FAIL, Silvertrousers (Cyrus Goodarzi), loads wrong byte, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lb_ov.bin")
if test $? = 245
then
    echo "lb_ov.bin, LB, PASS, Silvertrousers (Cyrus Goodarzi), catces out of range memory loading, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lb_ov.bin, LB, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch trying to load out of range mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(echo á | ./bin/mips_simulator "test_binaries/lb_i.bin")
if test $? = 1
then
    echo "lb_i.bin, LB, PASS, Silvertrousers (Cyrus Goodarzi), takes user input correctly, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lb_i.bin, LB, FAIL, Silvertrousers (Cyrus Goodarzi), didnt take user input correctly, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(echo á | ./bin/mips_simulator "test_binaries/lb_i_zero.bin")
if test $? = 0
then
    echo "lb_i_zero.bin, LB, PASS, Silvertrousers (Cyrus Goodarzi), takes user input correctly and only loads lsB of the mem word, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lb_i_zero.bin, LB, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't only load from lsB of mem word, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lhu_bt.bin")
if test $? = 16
then
    echo "lhu_bt.bin, LHU, PASS, Silvertrousers (Cyrus Goodarzi), loads correct byte without sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 240
then
    echo "lhu_bt.bin, LHU, FAIL, Silvertrousers (Cyrus Goodarzi), loads correct byte but has sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lhu_bt.bin, LHU, FAIL, Silvertrousers (Cyrus Goodarzi), loads wrong byte, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lhu_unaligned.bin")
if test $? = 245
then
    echo "lhu_unaligned.bin, LHU, PASS, Silvertrousers (Cyrus Goodarzi), detects unaligned address correctly, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lhu_unaligned.bin, LHU, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch unaligned sequence, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lhu_ov.bin")
if test $? = 245
then
    echo "lhu_ov.bin, LHU, PASS, Silvertrousers (Cyrus Goodarzi), catces out of range memory loading, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lhu_ov.bin, LHU, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch trying to load out of range mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lh_bt.bin")
if test $? = 240
then
    echo "lh_bt.bin, LH, PASS, Silvertrousers (Cyrus Goodarzi), loads correct byte with sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 16
then
    echo "lh_bt.bin, LHU, FAIL, Silvertrousers (Cyrus Goodarzi), loads correct byte but has no sign extension, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lh_bt.bin, LHU, FAIL, Silvertrousers (Cyrus Goodarzi), loads wrong byte, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lh_unaligned.bin")
if test $? = 245
then
    echo "lh_unaligned.bin, LH, PASS, Silvertrousers (Cyrus Goodarzi), detects unaligned address correctly, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lh_unaligned.bin, LH, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch unaligned sequence, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lh_ov.bin")
if test $? = 245
then
    echo "lh_ov.bin, LH, PASS, Silvertrousers (Cyrus Goodarzi), catces out of range memory loading, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lh_ov.bin, LH, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch trying to load out of range mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sb_o.bin") #broken still

OUTPUT=$(./bin/mips_simulator "test_binaries/lui_bt.bin")
if test $? = 1
then
    echo "lui_bt.bin, LUI, PASS, Silvertrousers (Cyrus Goodarzi), loads correct immediate, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lui_bt.bin, LUI, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lw_byte_0.bin")
if test $? = 64
then
    echo "lw_byte_0.bin, LW, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lw_byte_0.bin, LW, FAIL, Silvertrousers (Cyrus Goodarzi), LSB of word was incorrect when loaded, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lw_byte_1.bin")
if test $? = 48
then
    echo "lw_byte_1.bin, LW, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lw_byte_1.bin, LW, FAIL, Silvertrousers (Cyrus Goodarzi), B1 of word was incorrect when loaded, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lw_byte_2.bin")
if test $? = 32
then
    echo "lw_byte_2.bin, LW, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lw_byte_2.bin, LW, FAIL, Silvertrousers (Cyrus Goodarzi), LSB of word was incorrect when loaded, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lw_byte_3.bin")
if test $? = 16
then
    echo "lw_byte_3.bin, LW, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lw_byte_3.bin, LW, FAIL, Silvertrousers (Cyrus Goodarzi), MSB of word was incorrect when loaded, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lw_unaligned.bin")
if test $? = 245
then
    echo "lw_unaligned.bin, LW, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lw_unaligned.bin, LW, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't stop loading of words at unaligned addresses, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lw_ov.bin")
if test $? = 245
then
    echo "lw_ov.bin, LW, PASS, Silvertrousers (Cyrus Goodarzi), catces out of range memory loading, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lw_ov.bin, LW, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch trying to load out of range mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sb_bt.bin")
if test $? = 64
then
    echo "sb_bt.bin, SB, PASS, Silvertrousers (Cyrus Goodarzi), stores right part of word and puts it in the right place in mem, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 48
then
    echo "sb_bt.bin, SB, FAIL, Silvertrousers (Cyrus Goodarzi), stores wrong part of the word but put it in right place in mem, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sb_bt.bin, SB, FAIL, Silvertrousers (Cyrus Goodarzi), stores wrong part of the word and/or put it in wrong place in mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi


OUTPUT=$(./bin/mips_simulator "test_binaries/sb_o.bin")
if test $? = 64
then
    echo "sb_o.bin, SB, PASS, Silvertrousers (Cyrus Goodarzi), stores right part of word and puts it in the right place in mem, " | paste -sd ' ' >> ./test/output/"$dt"
elif test $? = 48
then
    echo "sb_o.bin, SB, FAIL, Silvertrousers (Cyrus Goodarzi), stores wrong part of the word but put it in right place in mem, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sb_o.bin, SB, FAIL, Silvertrousers (Cyrus Goodarzi), stores wrong part of the word and/or put it in wrong place in mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi


OUTPUT=$(./bin/mips_simulator "test_binaries/sb_ov.bin")
if test $? = 245
then
    echo "sb_ov.bin, SB, PASS, Silvertrousers (Cyrus Goodarzi), catches storing to wrong mem, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sb_ov.bin, SB, FAIL, Silvertrousers (Cyrus Goodarzi), not sure why it wrong sorry, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sb_instr.bin")
if test $? = 245
then
    echo "sb_instr.bin, SB, PASS, Silvertrousers (Cyrus Goodarzi), catches writing to instruction mem, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sb_instr.bin, SB, FAIL, Silvertrousers (Cyrus Goodarzi), not sure why it wrong sorry, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sh_hw0.bin")
if test $? = 34
then
    echo "sh_hw0.bin, SH, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sh_hw0.bin, SH, FAIL, Silvertrousers (Cyrus Goodarzi), ------, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sh_hw1.bin")
if test $? = 34
then
    echo "sh_hw1.bin, SH, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sh_hw1.bin, SH, FAIL, Silvertrousers (Cyrus Goodarzi), ------, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sh_ov.bin")
if test $? = 245
then
    echo "sh_ov.bin, SH, PASS, Silvertrousers (Cyrus Goodarzi), catces out of range memory loading, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sh_ov.bin, SH, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch trying to load out of range mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/lw_sw_bt.bin")
if test $? = 0
then
    echo "lw_sw_bt.bin, SW, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "lw_sw_bt.bin, SW, FAIL, Silvertrousers (Cyrus Goodarzi), No idea why it failed, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sw_unaligned.bin")
if test $? = 245
then
    echo "sw_unaligned.bin, SW, PASS, Silvertrousers (Cyrus Goodarzi), ----, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sw_unaligned.bin, SW, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't stop loading of words at unaligned addresses, " | paste -sd ' ' >> ./test/output/"$dt"
fi
OUTPUT=$(./bin/mips_simulator "test_binaries/sw_ov.bin")
if test $? = 245
then
    echo "sw_ov.bin, SW, PASS, Silvertrousers (Cyrus Goodarzi), catches out of range memory loading, " | paste -sd ' ' >> ./test/output/"$dt"
else
    echo "sw_ov.bin, SW, FAIL, Silvertrousers (Cyrus Goodarzi), doesn't catch trying to load out of range mem, " | paste -sd ' ' >> ./test/output/"$dt"
fi

cat ./test/output/"$dt"
